[{
  "model": "app.tasks", "pk": 1,
  "fields": {"round": 1,
    "title": "Задание 1",
    "content": "Вася любит заниматься физкультурой, но не в спортзале, а каждый раз, когда\r\nпредоставляется естественная возможность напрячься. В том числе он никогда не пользуется\r\nлифтом. Поднимаясь до нужного этажа, Вася, по возможности, замечает, какой этаж находится\r\nровно на середине подъёма. Напишите программу, которая по этажу k, находящемуся ровно на\r\nсередине подъёма, определит этаж, на который поднимается Вася.\r\nНа вход программе подаётся одно натуральное число k (k < 100).\r\nВыведите целое число, равное этажу, на который поднимается Вася.",
    "input_data": "2",
    "output_data": "3",
    "task": "Получите результат при k = 10",
    "task_answer": "19",
    "task_rating": 5}},
  {
    "model": "app.tasks", "pk": 2, "fields": {"round": 1, "title": "Задание 2", "content": "Андрей, разглядывая семейный фотоальбом, заметил, что бабушка пользовалась то\r\nтреугольной, то овальной заколкой, даже если платье было одно и тоже. На фотографиях были даты, и Андрей подумал, а не связано ли это с днём недели. Календаря под рукой не оказалось, но Андрей легко умел определять день недели, на который приходилось 1 января любого года. Помогите Андрею проверить его гипотезу.\r\nНа вход программе подаётся дата, когда была сделана фотография, и номер дня недели 1\r\nянваря того же года (1 – понедельник, 2 – вторник, …, 7 – воскресенье). Дата указывается как три\r\nнатуральных числа, записанные через пробел (число, месяц год).\r\nПрограмма должны вывести номер дня недели, когда была сделана фотография.", "input_data": "26 12 2010 5", "output_data": "7", "task": "Получите решение для даты: 26 12 1900 1", "task_answer": "3", "task_rating": 5}}, {"model": "app.tasks", "pk": 3, "fields": {"round": 1, "title": "Задание 3", "content": "Написать программу, которая находит наибольшее целое число, сумма четных\r\nположительных цифр которого кратна 3, в диапазоне от m до n включительно.\r\nФормат ввода:\r\nВ строке вводятся два целых числа m, n, 0≤ m ≤ n ≤30000.\r\nФормат вывода:\r\nВывести одно целое число – наибольшее число, сумма цифр которого кратна 4, из диапазона.\r\nЕсли таких чисел нет, вывести 0.", "input_data": "10 1000", "output_data": "996", "task": "Получите ответ для входных данных: m=7, n=8", "task_answer": "0", "task_rating": 5}}, {"model": "app.tasks", "pk": 4, "fields": {"round": 1, "title": "Задание 4", "content": "Есть исполнитель Битик. Он преобразует целое неотрицательное число, которое хранится в\r\nодном байте, по следующему правилу:\r\n1) Если число нечётное, то циклически смещаем все двоичные цифры в байте на 2 позиции вправо.\r\nНапример:\r\n10510\r\n011010012\r\nПреобразуется в\r\n_ _011010 01 (сдвиг вправо)\r\n0100110102 (результат)\r\n9010\r\n2) Если число чётное, то смещаем все двоичные цифры в байте на 3 позиции влево\r\nнециклически (записываем на образовавшиеся места 0).\r\nНапример:\r\n10610\r\n011010102\r\nПреобразуется в\r\n01010_ _ _ (сдвиг влево)\r\n010100002 (результат)\r\n8010\r\nНапишите программу, которая осуществляет данное преобразование над введённым\r\nнеотрицательным числом.\r\nНа вход программы подаётся одно целое число.\r\nПрограмма должна вывести одно целое число - вычисленное значение.", "input_data": "114", "output_data": "144", "task": "Найдите решение для числа 167", "task_answer": "233", "task_rating": 5}}, {"model": "app.tasks", "pk": 5, "fields": {"round": 1, "title": "Задание 5", "content": "С клавиатуры вводится несколько целых двузначных десятичных чисел. Точное количество\r\nэтих чисел неизвестно, но может быть очень велико.\r\nЧисла можно собирать в цепочку по следующему правилу: у двух соседних чисел должно\r\nсовпадать произведение цифр. Начинать цепочку можно с любого числа.\r\nНеобходимо определить максимальную длину цепочки, которую можно собрать из\r\nвведённых чисел по этим правилам\r\nФормат ввода:\r\nВ строке вводится сначала целое число n – количество двузначных чисел в цепочке (n ≤\r\n1000), затем n двузначных целых чисел, все числа отделены друг от друга одним или несколькими пробелами.\r\nФормат вывода:\r\nВывести одно целое число – количество чисел в цепочке.", "input_data": "3 22 14 32", "output_data": "2", "task": "Найдите ответ при n=8 и содержимым списка равным [7 33 21 12 23 32 16 61]", "task_answer": "4", "task_rating": 5}}, {"model": "app.tasks", "pk": 6, "fields": {"round": 2, "title": "Задание 6", "content": "Вася Васечкин очень хочет пятёрку в четверти по информатике, но его средний балл не\r\nдотягивает до 4,7 (минимальная средняя оценка для выставления пятёрки в четверти в Васиной\r\nшколе). Какое минимальное количество пятёрок должно быть у Васи к окончанию четверти?\r\nНа вход программе подаётся два целых неотрицательных числа a, b, - количества троек и\r\nчетвёрок в журнале соответственно. Двоек у Васи, к счастью, нет. Общее количество текущих\r\nоценок не превосходит 100. Все оценки имеют одинаковый вес.\r\nПрограмма должна вывести одно целое число – необходимое количество пятёрок.", "input_data": "0 1", "output_data": "3", "task": "Найти решение при входных данных a=10 и b=10", "task_answer": "80", "task_rating": 5}}, {"model": "app.tasks", "pk": 7, "fields": {"round": 2, "title": "Задание 7", "content": "Андрей, разглядывая семейный фотоальбом, заметил, что бабушка пользовалась то\r\nтреугольной, то овальной заколкой, даже если платье было одно и тоже. На фотографиях были даты, и Андрей подумал, а не связано ли это с днём недели. Календаря под рукой не оказалось. Помогите Андрею проверить его гипотезу.\r\nНа вход программе подаётся дата, когда была сделана фотография. Дата реальная – три\r\nнатуральных числа, записанные через точку.\r\nВыведите номер дня недели, когда была сделана фотография: 1 – понедельник,\r\n2 – вторник, …, 7 – воскресенье.", "input_data": "28.12.2010", "output_data": "2", "task": "Решите задачу при входных данных 31.12.2010", "task_answer": "5", "task_rating": 5}}, {"model": "app.tasks", "pk": 8, "fields": {"round": 2, "title": "Задание 8", "content": "Написать программу, которая находит наибольшее целое число, произведение\r\nположительных четных цифр которого кратно 4, в диапазоне от m до n включительно.\r\nФормат ввода:\r\nВ строке вводятся два целых числа m, n, 0≤ m ≤ n ≤30000.\r\nФормат вывода:\r\nВывести одно целое число – наибольшее целое число, произведение положительных четных\r\nцифр которого кратно 4. Если таких чисел нет, вывести 0.", "input_data": "m=5, n=30", "output_data": "28", "task": "Решите задачу с следующими входными данными: m=10,  n=1003", "task_answer": "998", "task_rating": 5}}, {"model": "app.tasks", "pk": 9, "fields": {"round": 2, "title": "Задание 9", "content": "Есть исполнитель Битик. Он преобразует целое неотрицательное число, которое хранится в\r\nодном байте, по следующему правилу:\r\n1) Если число нечётное, то циклически смещаем все двоичные цифры в байте на 2 позиции влево.\r\nНапример:\r\n10510\r\n011010012\r\nПреобразуется в\r\n01 101001_ _ (сдвиг влево)\r\n101001012 (результат)\r\n16510\r\n2) Если число чётное, то смещаем все двоичные цифры в байте на 3 позиции вправо нециклически (записываем на образовавшиеся места 0).\r\nНапример:\r\n10610\r\n011010102\r\nПреобразуется в\r\n_ _ _ 01101 (сдвиг вправо)\r\n000011012 (результат)\r\n1310\r\nНапишите программу, которая осуществляет данное преобразование над введённым\r\nнеотрицательным числом.\r\nНа вход программы подаётся одно целое число.\r\nПрограмма должна вывести одно целое число - вычисленное значение.", "input_data": "106", "output_data": "13", "task": "Решите задачу с входными данными 110", "task_answer": "13", "task_rating": 5}}, {"model": "app.tasks", "pk": 10, "fields": {"round": 2, "title": "Задание 10", "content": "С клавиатуры вводится несколько целых двузначных десятичных чисел. Точное количество\r\nэтих чисел неизвестно, но может быть очень велико.\r\nЧисла можно собирать в цепочку по следующему правилу: у двух соседних чисел должны\r\nотличаться первые цифры. Начинать цепочку можно с любого числа.\r\nНеобходимо определить максимальную длину цепочки, которую можно собрать из\r\nвведённых чисел по этим правилам\r\nФормат ввода:\r\nВ строке вводится сначала целое число n – количество двузначных чисел в цепочке (n ≤\r\n1000), затем n двузначных целых чисел, все числа отделены друг от друга одним или несколькими пробелами.\r\nФормат вывода\r\nВывести одно целое число – количество чисел в цепочке.", "input_data": "4 41 22 14 16", "output_data": "3", "task": "Решите задачу для n=9 и содержащим список [8 14 41 22 14 13 16 61 32]", "task_answer": "4", "task_rating": 5}}, {"model": "app.tasks", "pk": 11, "fields": {"round": 3, "title": "Задание 11", "content": "Для обогрева салона вездехода «Секач» используется нагревательный элемент,\r\nпринципиальная схема которого сводится к двум соединённым последовательно блокам\r\nсопротивлений и третьему, который подключается параллельно к первым двум. Зная сопротивления каждого из блоков, рассчитать, какой из нагревательных элементов обеспечит наибольшее тепловыделение при фиксированной силе тока в цепи. Все элементы отличаются общим сопротивлением.\r\nФормат ввода:\r\nВ строке вводится n – количество сборок, подходящих для обогревателя (n ≤ 10), затем n\r\nтроек целых чисел – сопротивление каждого из трех блоков сборки. Все числа отделены друг от друга одним или несколькими пробелами.\r\nФормат вывода:\r\nВывести одно целое число – номер сборки, обеспечивающей наибольшее тепловыделение.", "input_data": "2 10 10 10 20 5 1", "output_data": "1", "task": "Получите ответ для следующих входных данных: n=5  и следующими сборками: [[10 10 10] [20 30 40] [5 8 3] [50 50 50] [90 50 11]]", "task_answer": "4", "task_rating": 10}}, {"model": "app.tasks", "pk": 12, "fields": {"round": 3, "title": "Задание 12", "content": "Наташа и Олег очень любят путешествовать. В основном они путешествуют по железной дороге.\r\nОднажды они ехали в вагоне, где были только сидячие места, и заинтересовались расположением сидений в своем купе.\r\nТип места обозначается следующим образом:\r\nСиденье у окна: W\r\nСреднее место: M\r\nМесто у прохода: A\r\nРебятам стало интересно узнать номер и тип сиденья, расположенного напротив.\r\nНапишите программу, которая поможет ребятам решить эту задачу.\r\nВходные данные:\r\nНа вход подается одно целое число N (1 <= N <= 108), обозначающее номер места.\r\nВыходные данные:\r\nЦелое число, и большая латинская буква W, M или A, разделенные одним пробелом, которые будут\r\nсоответствовать номеру и типу соседнего сиденья.", "input_data": "19", "output_data": "18 M", "task": "Решите задачу с входными данными 24", "task_answer": "13 W", "task_rating": 10}}, {"model": "app.tasks", "pk": 13, "fields": {"round": 3, "title": "Задание 13", "content": "Вася наблюдает, как строители копают фундамент для нового дома. Землю они вывозят\r\nодинаковыми самосвалами. По каким-то своим причинам всю выбранную землю вывозят со\r\nстройки в тот же день, в который ее выбрали, то есть даже за одним кубометром все равно вечером приедет самосвал. Ещё одна странность, которую заметил Вася, что первый в день самосвал всегда наполняли максимум на половину.\r\nВасе известно, сколько дней копали фундамент, какой объем земли вывозили каждый день и\r\nсколько кубометров помещается в самосвал. Вася любил считать всё, что можно, и в этот раз он решил считать самосвалы, но отвлекался на домашнюю работу и теперь боится, что посчитал не верно. Напишите программу, которая поможет Васе проверить общее количество самосвалов, которые вывозили грунт.\r\nВ первой строке на вход программы подаются два натуральных числа: количество дней t, в\r\nтечение которых копали фундамент, 1 < t ≤ 103 и объем земли v, который вмещается в один\r\nсамосвал, 1 < v ≤ 102. \r\nНа следующей строке на вход программы поступает n целых\r\nнеотрицательных чисел: a1, a2, …, an. ai – сколько земли выбрали в i-й день, 1 < ai ≤ 105\r\nВыведите одно целое число – количество требуемых самосвалов.", "input_data": "2 10", "output_data": "4", "task": "Решите задачу с следующими входными данными: 10 15", "task_answer": "4", "task_rating": 10}}, {"model": "app.tasks", "pk": 14, "fields": {"round": 3, "title": "Задание 14", "content": "Исполнитель получает на вход натуральное число X (не превышающее 106). По этому числу,\r\nточнее по его представлению в восьмеричной системе счисления, строится новое число Y по\r\nследующим правилам.\r\nВ восьмеричном представлении числа X предпоследняя цифра увеличивается на 1\r\n(гарантируется, что в восьмеричном представлении X числа больше 2-х цифр). Например, 69510 =12678 -> 12778 = 70310.\r\nЕсли предпоследняя цифра 7, тогда предпоследняя цифра становится 0, а последняя\r\nизменяется по следующему принципу: четная увеличивается на 1, а нечетная уменьшается на 1.\r\nНапример:\r\nПоследняя цифра нечетная 69710 = 12718 -> 12008 = 64010, последняя цифра четная 69810\r\n= 12728 -> 12038 = 64310.\r\nВведем понятие расстояния: \r\nOh = Исходное_число – Полученное_число\r\nНапишите программу, которая будет считать для скольких чисел из заданного интервала\r\n[A,B] расстояние Oh будет положительным.\r\nНа вход программы подаётся два целых числа А и В (10 ≤ A ≤ B ≤1 000 000), записанных\r\nчерез пробел.\r\nПрограмма должна вывести одно целое число - вычисленное значение", "input_data": "2356 2360", "output_data": "1", "task": "Решите задачу с следующими входными данными: 502 506", "task_answer": "3", "task_rating": 15}}, {"model": "app.tasks", "pk": 15, "fields": {"round": 3, "title": "Задание 15", "content": "Сообщение, которое передают по каналу связи, состоит из чисел, записанных в десятичной\r\nсистеме счисления. Каждое число состоит из шести знаков, а его двоичная запись оканчивается\r\nтремя нулями. При передаче сообщение было засорено посторонними шумами: числами,\r\nотличающимися от тех, что были в сообщении. Найдите изначальное количество чисел в сообщении.\r\nФормат ввода:\r\nВ строке вводится сначала целое число n – количество чисел в сообщении (n ≤ 1000), затем\r\nn натуральных чисел, все числа отделены друг от друга одним или несколькими пробелами.\r\nФормат вывода:\r\nВывести одно целое число – количество достоверных сигналов в сообщении.", "input_data": "3 100128 4356 234064", "output_data": "2", "task": "Решите задачу с следующими входными данными: 4 234864 123048 230 1000", "task_answer": "2", "task_rating": 15}}, {"model": "app.tasks", "pk": 16, "fields": {"round": 4, "title": "Задание 16", "content": "Несколько агентов пересылают кодовые сообщения в Центр. Сообщение каждого агента\r\nпредставляет собой несколько слов, к каждому из которых приписан его идентификатор, состоящий из одной буквы. Сообщения записаны по очереди. Найдите сообщение, содержащее больше всего слов.\r\nФормат ввода:\r\nВ первой строке вводится сначала целое число n – количество слов (n ≤ 1000), затем в n\r\nследующих строках записано по слову. Слова состоят только из строчных латинских букв.\r\nФормат вывода:\r\nВывести одно целое число – длину сообщения (количество слов в сообщении), содержащего\r\nбольше всего слов.", "input_data": "4\r\nbcd\r\nbcfd\r\nbcdfe\r\nabc", "output_data": "2", "task": "Получите ответ для следующих входных данных:\r\n3\r\nabd\r\nabdc\r\nbvd", "task_answer": "1", "task_rating": 15}}, {"model": "app.tasks", "pk": 17, "fields": {
  "content": "Зонд передает данные с орбиты Юпитера во время сильной магнитной бури. Информация\r\nпередается по каналу связи в виде пакетов. Каждый пакет представляет собой целое положительное число в двоичной системе счисления. Для обнаружения помех последний разряд в пакете подбирают таким образом, чтобы количество единиц в разрядах пакета было четным. В каждом пакете на практике никогда не искажается больше одного разряда.\r\nНапишите программу, которая по распечатке пакетов, записанных в десятичной системе\r\nсчисления, найдет самое большое значение, прошедшее без искажений. Известно, что как минимум один пакет прошел без искажений.\r\nФормат ввода:\r\nВ строке вводится сначала целое число n – количество пакетов (n ≤ 1000), затем n\r\nнатуральных чисел, все числа отделены друг от друга одним или несколькими пробелами.\r\nФормат вывода:\r\nВывести одно целое число – самое большое значение, прошедшее без искажений.",
  "input_data": "10 1 1 1 1 1 4097 1 1 1 1",
  "output_data": "4097",
  "round": 4,
  "task": "Решите задачу с следующими входными данным: 8 2466 23545 4186 521 4036 456 25547 864",
  "task_answer": "864",
  "task_rating": 15,
  "title": "Задание 17"
}}, {"model": "app.tasks", "pk": 18, "fields": {"round": 4, "title": "Задание 18", "content": "Миша ведет дневник, отслеживая, сколько шагов в день он проходит пешком. Каждый день\r\nон записывает количество шагов. Требуется определить, в какой день во время периода наблюдений он прошел наибольшую дистанцию и прошел ли он столько, сколько планировал, за все время. \r\nНа вход программе в первой строке подаются натуральное число N – количество дней, в\r\nтечение которых велось наблюдение (N≤20) и натуральное число X – запланированное количество шагов.\r\nДалее в N строках подается на вход по целому положительному числу – xi: количество шагов,\r\nпройденных в i-й день.\r\nВывести два целых числа – в первой строке вывести номер дня, в который Миша прошел\r\nбольше всего шагов, во второй строке вывести 1, если он прошел не менее запланированного числа шагов и 0 в обратном случае. Если Вася прошел одинаковое количество шагов в несколько разных дней, вывести наименьший номер дня.", "input_data": "3 15\r\n5\r\n3\r\n6", "output_data": "3\r\n0", "task": "Решите задачу с следующими входными данными:\r\n2 10\r\n6\r\n7\r\nОтвет выведите строкой, содержащей числа через пробел", "task_answer": "2 1", "task_rating": 20}}]